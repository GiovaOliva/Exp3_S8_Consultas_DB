--CASO 1

-- CONFIGURACIÓN INICIAL CON ADMIN

-- Crear usuarios
CREATE USER PRY2205_USER1 IDENTIFIED BY "FuertePassword1";
CREATE USER PRY2205_USER2 IDENTIFIED BY "FuertePassword2";

-- Crear roles
CREATE ROLE PRY2205_ROL_D;
CREATE ROLE PRY2205_ROL_P;

-- Asignar roles a usuarios
GRANT PRY2205_ROL_D TO PRY2205_USER2;
GRANT PRY2205_ROL_P TO PRY2205_USER1;

-- Otorgar permisos básicos
GRANT CONNECT, RESOURCE TO PRY2205_USER1;
ALTER USER PRY2205_USER1 QUOTA UNLIMITED ON DATA;
GRANT CREATE SYNONYM TO PRY2205_USER1;
GRANT CREATE VIEW TO PRY2205_USER1;
GRANT CONNECT TO PRY2205_USER2;
GRANT CREATE VIEW TO PRY2205_USER2;

-- CONECTARSE CON USER1

-- Crear y poblar tablas con script en anexo

-- Crear vistas
CREATE OR REPLACE VIEW VW_PAGOS AS
SELECT * FROM PAGOS;

CREATE OR REPLACE VIEW VW_BONO_CONSULTA AS
SELECT * FROM BONO_CONSULTA;

CREATE OR REPLACE VIEW VW_PACIENTE AS
SELECT * FROM PACIENTE;

CREATE OR REPLACE VIEW VW_SALUD AS
SELECT * FROM SALUD;

-- Crear sinónimos públicos desde ADMIN
CREATE OR REPLACE PUBLIC SYNONYM SYN_PAGOS FOR PRY2205_USER1.VW_PAGOS;
CREATE OR REPLACE PUBLIC SYNONYM SYN_BONO_CONSULTA FOR PRY2205_USER1.VW_BONO_CONSULTA;
CREATE OR REPLACE PUBLIC SYNONYM SYN_PACIENTE FOR PRY2205_USER1.VW_PACIENTE;
CREATE OR REPLACE PUBLIC SYNONYM SYN_SALUD FOR PRY2205_USER1.VW_SALUD;

-- Otorgar permisos directos al USER2 para garantizar el acceso
GRANT SELECT ON PRY2205_USER1.PAGOS TO PRY2205_USER2;
GRANT SELECT ON PRY2205_USER1.BONO_CONSULTA TO PRY2205_USER2;
GRANT SELECT ON PRY2205_USER1.PACIENTE TO PRY2205_USER2;
GRANT SELECT ON PRY2205_USER1.SALUD TO PRY2205_USER2;

-- JUSTIFICACIÓN:
-- 1. Inicialmente, los permisos otorgados al ROL_D sobre los sinónimos y vistas públicas resultaron insuficientes
--    para que USER2 pudiera crear vistas basadas en esos objetos debido a restricciones de permisos de Oracle.
-- 2. Como solución, se otorgan permisos directos sobre las tablas base a USER2 para garantizar el acceso requerido.
-- 3. Esto es una medida excepcional para asegurar la funcionalidad mientras se respeta la seguridad al otorgar únicamente
--    permisos SELECT.

--CASO 2
-- CONECTARSE A USER2

CREATE OR REPLACE VIEW V_RECALCULO_PAGOS AS
SELECT 
    PACIENTE.pac_run AS PAC_RUN,
    PACIENTE.dv_run AS DV_RUN,
    SALUD.descripcion AS SIST_SALUD,
    PACIENTE.pnombre || ' ' || PACIENTE.apaterno AS NOMBRE_PACIENTE,
    PAGOS.monto_consulta AS COSTO,
    CASE
        WHEN PAGOS.monto_consulta BETWEEN 15000 AND 25000 THEN ROUND(PAGOS.monto_consulta * 0.85)
        WHEN PAGOS.monto_consulta > 25000 THEN ROUND(PAGOS.monto_consulta * 0.80)
        ELSE PAGOS.monto_consulta
    END AS MONTO_A_CANCELAR,
    FLOOR(MONTHS_BETWEEN(SYSDATE, PACIENTE.fecha_nacimiento) / 12) AS EDAD
FROM 
    PRY2205_USER1.PAGOS PAGOS
INNER JOIN PRY2205_USER1.BONO_CONSULTA BONO_CONSULTA ON PAGOS.id_bono = BONO_CONSULTA.id_bono
INNER JOIN PRY2205_USER1.PACIENTE PACIENTE ON BONO_CONSULTA.pac_run = PACIENTE.pac_run
INNER JOIN PRY2205_USER1.SALUD SALUD ON PACIENTE.sal_id = SALUD.sal_id
WHERE 
    TO_DATE(BONO_CONSULTA.hr_consulta, 'HH24:MI') > TO_DATE('17:15', 'HH24:MI')
ORDER BY 
    PAC_RUN, MONTO_A_CANCELAR;
    
    
-- DESDE ADMIN LE DAMOS CREAMOS VISTAS Y DAMOS PERMISO A USER1

-- Creamos Sinonimos
CREATE PUBLIC SYNONYM SYN_MEDICO FOR PRY2205_USER1.MEDICO;
CREATE PUBLIC SYNONYM SYN_CARGO FOR PRY2205_USER1.CARGO;

-- Damos permiso a USER1
GRANT SELECT ON PRY2205_USER1.MEDICO TO PRY2205_USER1;
GRANT SELECT ON PRY2205_USER1.CARGO TO PRY2205_USER1;

-- CONECTARSE COMO PRY2205_USER1

-- CASO 3. CREACIÓN DE VISTAS
-- Crear vista para el Caso 3
CREATE OR REPLACE VIEW VISTA_AUM_MEDICO_X_CARGO AS
SELECT 
    TO_CHAR(MEDICO.rut_med, '999G999G999') || '-' || MEDICO.dv_run AS RUT_MEDICO,
    CARGO.nombre AS CARGO,
    TO_CHAR(MEDICO.sueldo_base, '$999G999G999') AS SUELDO_BASE,
    TO_CHAR(MEDICO.sueldo_base * 1.15, '$999G999G999') AS SUELDO_AUMENTADO
FROM 
    MEDICO
INNER JOIN CARGO ON MEDICO.car_id = CARGO.car_id
WHERE 
    CARGO.nombre LIKE '%atención%'
ORDER BY 
    MEDICO.sueldo_base * 1.15 ASC;

-- Crear vista para el Caso 3.2
CREATE OR REPLACE VIEW VISTA_AUM_MEDICO_X_CARGO_2 AS
SELECT 
    TO_CHAR(MEDICO.rut_med, '999G999G999') || '-' || MEDICO.dv_run AS RUT_MEDICO,
    CARGO.nombre AS CARGO,
    TO_CHAR(MEDICO.sueldo_base, '$999G999G999') AS SUELDO_BASE,
    TO_CHAR(MEDICO.sueldo_base * 1.15, '$999G999G999') AS SUELDO_AUMENTADO
FROM 
    MEDICO
INNER JOIN CARGO ON MEDICO.car_id = CARGO.car_id
WHERE 
    CARGO.car_id = 400 AND MEDICO.sueldo_base < 1500000
ORDER BY 
    MEDICO.rut_med ASC;

-- CREACIÓN DE ÍNDICES PARA OPTIMIZAR LAS VISTAS
CREATE INDEX IDX_MEDICO_CARGO ON MEDICO(car_id);
CREATE INDEX IDX_MEDICO_SUELDO ON MEDICO(sueldo_base);
CREATE INDEX IDX_CARGO_NOMBRE ON CARGO(nombre);